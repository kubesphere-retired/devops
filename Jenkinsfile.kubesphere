pipeline {
  agent {
    node{
      label 'go'
    }
  }
  stages {
    stage('unit test'){
       steps{
        container('go'){
           sh 'mkdir -p /home/jenkins/go/src/kubesphere.io/devops'
           sh "ln -s `pwd` /home/jenkins/go/src/kubesphere.io/devops"
           sh 'cd /home/jenkins/go/src/kubesphere.io/devops && make test'
         }
       }
    }
    stage('sonarqube analysis'){
      steps{
        script {
          scannerHome = tool 'sonar';
        }
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
            withSonarQubeEnv('sonar') {
               sh "${scannerHome}/bin/sonar-scanner -Dsonar.branch=$BRANCH_NAME -Dsonar.projectKey=ks-devops -Dsonar.sources=.  -Dsonar.login=$SONAR_TOKEN"
            }
        }
      }
    }
  }
}
